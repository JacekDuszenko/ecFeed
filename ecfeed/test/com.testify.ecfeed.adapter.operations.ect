<?xml version="1.0" encoding="UTF-8"?>
<Model name="com.testify.ecfeed.adapter.operations"><Class name="com.testify.ecfeed.adapter.operations.GenericOperationAddParameterTest"><Method name="executeTest"><Category name="parentType" type="com.testify.ecfeed.testutils.ENodeType" isExpected="false" expected="METHOD"><Partition name="method" value="METHOD"/><Partition name="class" value="CLASS"/><Partition name="project" value="PROJECT"/></Category><Category name="index" type="com.testify.ecfeed.adapter.operations.EIndexValue" isExpected="false" expected="NO_VALUE"><Partition name="no value" value="NO_VALUE"/><Partition name="negative" value="NEGATIVE"/><Partition name="-1" value="MINUS_ONE"/><Partition name="0" value="ZERO"/><Partition name="1" value="ONE"/><Partition name="valid positive" value="VALID_POSITIVE"/><Partition name="last existing" value="SIZE"/><Partition name="one after the array" value="SIZE_PLUS_ONE"/><Partition name="beyond length" value="BEYOND_LENGTH"/></Category><Category name="nameExists" type="boolean" isExpected="false" expected="false"><Partition name="exists" value="true"/><Partition name="does not exist" value="false"/></Category><Category name="success" type="boolean" isExpected="true" expected="false"><Partition name="partition" value="false"/></Category><Constraint name="expected value"><Premise><StatementArray operator="and"><StatementArray operator="or"><Statement partition="no value" category="index" relation="="/><Statement partition="0" category="index" relation="="/><Statement partition="1" category="index" relation="="/><Statement partition="valid positive" category="index" relation="="/><Statement partition="last existing" category="index" relation="="/><Statement partition="one after the array" category="index" relation="="/><Statement partition="-1" category="index" relation="="/></StatementArray><Statement partition="does not exist" category="nameExists" relation="="/></StatementArray></Premise><Consequence><ExpectedValueStatement category="success" value="true"/></Consequence></Constraint></Method><Method name="undoRedoTest"><Category name="parentType" type="com.testify.ecfeed.testutils.ENodeType" isExpected="false" expected="METHOD"><Partition name="method" value="METHOD"/><Partition name="class" value="CLASS"/><Partition name="project" value="PROJECT"/></Category><Category name="index" type="com.testify.ecfeed.adapter.operations.EIndexValue" isExpected="false" expected="NO_VALUE"><Partition name="0" value="ZERO"/><Partition name="1" value="ONE"/><Partition name="valid positive" value="VALID_POSITIVE"/><Partition name="last existing" value="SIZE"/><Partition name="one after the array" value="SIZE_PLUS_ONE"/></Category></Method><Method name="randomSeriesTest"><Category name="parentType" type="com.testify.ecfeed.testutils.ENodeType" isExpected="false" expected="METHOD"><Partition name="method" value="METHOD"/><Partition name="class" value="CLASS"/><Partition name="project" value="PROJECT"/></Category></Method></Class><Class name="com.testify.ecfeed.adapter.operations.MethodOperationAddParameterTest"><Method name="testMethodWithTestCases"/><Method name="methodSignatureTest"><Category name="sameArgNames" type="boolean" isExpected="false" expected="false"><Partition name="identical arg names" value="true"/><Partition name="different arg names" value="false"/></Category><Category name="sameArgTypes" type="boolean" isExpected="false" expected="false"><Partition name="identical arg types" value="true"/><Partition name="different arg types" value="false"/></Category><Category name="sameName" type="boolean" isExpected="false" expected="false"><Partition name="identical method name" value="true"/><Partition name="different method name" value="false"/></Category><Category name="duplicate" type="boolean" isExpected="true" expected="false"><Partition name="partition" value="false"/></Category><Constraint name="expected value"><Premise><StatementArray operator="and"><Statement partition="identical arg types" category="sameArgTypes" relation="="/><Statement partition="identical method name" category="sameName" relation="="/></StatementArray></Premise><Consequence><ExpectedValueStatement category="duplicate" value="true"/></Consequence></Constraint></Method></Class><Class name="com.testify.ecfeed.adapter.operations.GenericOperationRemoveParameterTest"><Method name="seriesTest"><Category name="parentType" type="com.testify.ecfeed.testutils.ENodeType" isExpected="false" expected="METHOD"><Partition name="method" value="METHOD"/><Partition name="class" value="CLASS"/><Partition name="project" value="PROJECT"/></Category></Method></Class><Class name="com.testify.ecfeed.adapter.operations.MethodOperationRemoveParameterTest"><Method name="signatureCheckTest"><Category name="sameParameterNames" type="boolean" isExpected="false" expected="false"><Partition name="identical arg names" value="true"/><Partition name="different arg names" value="false"/></Category><Category name="sameParameterTypes" type="boolean" isExpected="false" expected="false"><Partition name="identical arg types" value="true"/><Partition name="different arg types" value="false"/></Category><Category name="sameMethodName" type="boolean" isExpected="false" expected="false"><Partition name="identical method name" value="true"/><Partition name="different method name" value="false"/></Category><Category name="duplicate" type="boolean" isExpected="true" expected="false"><Partition name="partition" value="false"/></Category><Constraint name="expected result"><Premise><StatementArray operator="and"><Statement partition="identical arg types" category="sameParameterTypes" relation="="/><Statement partition="identical method name" category="sameMethodName" relation="="/></StatementArray></Premise><Consequence><ExpectedValueStatement category="duplicate" value="true"/></Consequence></Constraint></Method><Method name="consistenceCheckTest"><Category name="removedParameterExpected" type="boolean" isExpected="false" expected="false"><Partition name="true" value="true"/><Partition name="false" value="false"/></Category></Method></Class><Class name="com.testify.ecfeed.adapter.operations.AbstractParameterOperationSetTypeTest"><Method name="typeNameTest"><Category name="currentType" type="String" isExpected="false" expected="0"><Partition name="user type" value=""><Partition name="one segment" value="type"/><Partition name="multi segments" value="com.example.test.UserType"/></Partition><Partition name="primitive" value=""><Partition name="boolean" value="boolean"/><Partition name="char" value="char"/><Partition name="byte" value="byte"/><Partition name="short" value="short"/><Partition name="int" value="int"/><Partition name="long" value="long"/><Partition name="double" value="double"/><Partition name="float" value="float"/><Partition name="String" value="String"/></Partition></Category><Category name="newTypeName" type="String" isExpected="false" expected="0"><Partition name="valid" value="MIN_VALUE"/><Partition name="invalid" value="MAX_VALUE"><Partition name="misformated" value=""><Partition name="space" value="com example test"/><Partition name="coma" value="com,example,test"/><Partition name="colon" value="com:example:test"/><Partition name="exclamation" value="com!example!test"/></Partition><Partition name="java keyword" value=""><Partition name="one segment" value="for"><Partition name="for" value="for"/><Partition name="if" value="if"/><Partition name="class" value="class"/><Partition name="abstract" value="abstract"/><Partition name="package" value="package"/><Partition name="interface" value="interface"/></Partition><Partition name="multi segments" value=""><Partition name="for" value="com.for.test"/><Partition name="if" value="com.if.test"/><Partition name="while" value="while.com.test"/><Partition name="abstract" value="test.com.abstract"/><Partition name="package" value="package.abstract.test"/><Partition name="interface" value="interface.com.example.UserType"/></Partition></Partition></Partition></Category><Category name="exceptionExpected" type="boolean" isExpected="true" expected="false"><Partition name="partition" value="false"/></Category><Constraint name="expected value"><Premise><Statement partition="invalid" category="newTypeName" relation="="/></Premise><Consequence><ExpectedValueStatement category="exceptionExpected" value="true"/></Consequence></Constraint></Method><Method name="choicesConsistanceTest"/></Class></Model>
